#!/bin/sh

PATH="/bin:/sbin:/usr/sbin:/usr/bin"
ROOT=
init=

mount -t devtmpfs devtmpfs /dev
mount -t proc proc /proc
mount -t sysfs sysfs /sys

echo "4 4 1 7" > /proc/sys/kernel/printk

mkdir -p /sysroot
test -L /etc/mtab || ln -s /proc/mounts /etc/mtab
touch /etc/fstab

echo "============  xlxd-debian   ============"
echo "============  xlxd-debian   ============"
echo "============  xlxd-debian   ============"

sleep 4

if [ "$(ls /dev/sd* 2>/dev/null)" != "" ]; then
    modprobe ntfs
    modprobe isofs
    modprobe squashfs
    sleep 5

    mount -o ro LABEL=RESCUE_VOL /sysroot
    ret="$?"

    if [ "$ret" = "0" ]; then
        if [[ -f "/sysroot/sbin/init" || -L "/sysroot/sbin/init" ]]; then
            umount /sys
            umount /proc
            umount /dev

            exec switch_root /sysroot /sbin/init
            exec sh
        fi

        if [[ "$(tail -n1 /sysroot/quickrun.sh)"  == "#xlxdxlxd" ]]; then
            exec sh /sysroot/quickrun.sh
            exec sh
        fi
    fi
fi

# set green led
echo timer > /sys/class/leds/led0/trigger

# Parse command line options
for x in $(cat /proc/cmdline); do
    case $x in
    init=*)
        init=${x#init=}
        ;;
    root=*)
        ROOT=${x#root=}
        ;;
    esac
done

if [ "$ROOT" = "" ]; then
	ROOT="LABEL=rootfs"
fi

if [ "$init" = "" ]; then
	init="/sbin/init"
fi


mkdir /boot-init
mount -t vfat -o ro LABEL=boot /boot-init/
if [ -f /boot-init/xlxd/rootfs-protect ]; then
    PROTECT=1
else
    PROTECT=0
fi

if [ -f /boot-init/xlxd/boot-to-busybox ]; then
    BOOTBUSYBOX=1
else
    BOOTBUSYBOX=0
fi

umount /boot-init

# fsck
fsck.ext4 -pf LABEL=rootfs
fsck.ext4 -pf LABEL=data


if [ "${BOOTBUSYBOX}" = "1" ]; then
    exec sh
fi


if [ "${PROTECT}" = "0" ]; then
    mount -t ext4 -o ro "$ROOT" /sysroot
else
    modprobe overlay

    mkdir /rom /overlay
    mount -t ext4 -o ro "$ROOT" /rom
    mount -t tmpfs -o size=512M tmpfs /overlay
    mkdir /overlay/rootfs /overlay/work
    mount -t overlay -o lowerdir=/rom,upperdir=/overlay/rootfs,workdir=/overlay/work overlay /sysroot
    mount -t vfat -o ro LABEL=boot /sysroot/boot

    mkdir /sysroot/rom /sysroot/overlay
    mount --move /rom /sysroot/rom
    mount --move /overlay /sysroot/overlay
    # echo -n > /sysroot/etc/fstab
    # echo "LABEL=data    /data   ext4    defaults,noatime,nodelalloc,auto_da_alloc            0   3" > /sysroot/etc/fstab
    echo "LABEL=data    /data   ext4    defaults,noatime,nodelalloc,auto_da_alloc,commit=1,data=ordered     0   3" > /sysroot/etc/fstab
    echo "/data/system-connections      /etc/NetworkManager/system-connections  none    bind    0       0" >> /sysroot/etc/fstab
# FIXME:    echo "/data/fake-hwclock.data       /etc/fake-hwclock.data                  none    bind    0       0" >> /sysroot/etc/fstab
fi

# mount -t ext4 -o rw,noatime,nodelalloc LABEL=data /sysroot/data

umount /sys
umount /proc
umount /dev

for inittest in "$init" /sbin/init /bin/init /bin/sh; do
    if [[ -f "/sysroot/$inittest" || -L "/sysroot/$inittest" ]]; then
        # exec switch_root -c /dev/console /sysroot "$init"
        echo  switch_root /sysroot "$inittest"
        exec switch_root /sysroot "$inittest"
        break
    fi
done

exec sh

